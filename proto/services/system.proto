syntax = "proto3";

package seula.system;

import "common.proto";

// System Info Service
service SystemService {
  rpc GetSystemInfo(GetSystemInfoRequest) returns (GetSystemInfoResponse);
  rpc GetStatistics(GetStatisticsRequest) returns (GetStatisticsResponse);
  rpc ExportStatistics(ExportStatisticsRequest) returns (ExportStatisticsResponse);
}

// System Info
message GetSystemInfoRequest {}

message GetSystemInfoResponse {
  string version = 1;
  repeated string watch_paths = 2;
  bool watcher_active = 3;
  int64 uptime_seconds = 4;
}

message GetStatisticsRequest {
  optional seula.common.DateRange date_range = 1;
  repeated string collection_ids = 2;
  repeated string tag_ids = 3;
  optional string ableton_version_filter = 4;
}

message GetStatisticsResponse {
  // Basic counts
  int32 total_projects = 1;
  int32 total_plugins = 2;
  int32 total_samples = 3;
  int32 total_collections = 4;
  int32 total_tags = 5;
  int32 total_tasks = 6;
  
  // Plugin statistics
  repeated PluginStatistic top_plugins = 7;
  repeated VendorStatistic top_vendors = 8;
  
  // Musical statistics
  repeated TempoStatistic tempo_distribution = 9;
  repeated KeyStatistic key_distribution = 10;
  repeated TimeSignatureStatistic time_signature_distribution = 11;
  
  // Project analytics
  repeated YearStatistic projects_per_year = 12;
  repeated MonthStatistic projects_per_month = 13;
  double average_monthly_projects = 14;
  
  // Duration analytics
  double average_project_duration_seconds = 15;
  int32 projects_under_40_seconds = 16;
  seula.common.Project longest_project = 17;
  
  // Complexity metrics
  repeated ProjectComplexityStatistic most_complex_projects = 18;
  double average_plugins_per_project = 19;
  double average_samples_per_project = 20;
  
  // Sample statistics
  repeated SampleStatistic top_samples = 21;
  
  // Tag statistics
  repeated TagStatistic top_tags = 22;
  
  // Task statistics
  int32 completed_tasks = 23;
  int32 pending_tasks = 24;
  double task_completion_rate = 25;
  
  // Activity trends
  repeated ActivityTrendStatistic recent_activity = 26;
  
  // Version analytics
  repeated VersionStatistic ableton_versions = 27;
  
  // Collection statistics
  double average_projects_per_collection = 28;
  seula.common.Collection largest_collection = 29;
  
  // Historical task analytics
  repeated TaskCompletionTrendStatistic task_completion_trends = 30;
}

message ExportStatisticsRequest {
  seula.common.ExportFormat format = 1;
  optional GetStatisticsRequest filters = 2;
}

message ExportStatisticsResponse {
  bytes data = 1;
  string filename = 2;
  bool success = 3;
  optional string error_message = 4;
}

// Statistics message types
message PluginStatistic {
  string name = 1;
  string vendor = 2;
  int32 usage_count = 3;
}

message TempoStatistic {
  double tempo = 1;
  int32 count = 2;
}

message KeyStatistic {
  string key = 1;
  int32 count = 2;
}

message VendorStatistic {
  string vendor = 1;
  int32 plugin_count = 2;
  int32 usage_count = 3;
}

message TimeSignatureStatistic {
  int32 numerator = 1;
  int32 denominator = 2;
  int32 count = 3;
}

message YearStatistic {
  int32 year = 1;
  int32 count = 2;
}

message MonthStatistic {
  int32 year = 1;
  int32 month = 2;
  int32 count = 3;
}

message ProjectComplexityStatistic {
  seula.common.Project project = 1;
  int32 plugin_count = 2;
  int32 sample_count = 3;
  int32 complexity_score = 4;
}

message SampleStatistic {
  string name = 1;
  string path = 2;
  int32 usage_count = 3;
}

message TagStatistic {
  string name = 1;
  int32 usage_count = 2;
}

message ActivityTrendStatistic {
  int32 year = 1;
  int32 month = 2;
  int32 day = 3;
  int32 projects_created = 4;
  int32 projects_modified = 5;
}

message VersionStatistic {
  string version = 1;
  int32 count = 2;
}

message TaskCompletionTrendStatistic {
  int32 year = 1;
  int32 month = 2;
  int32 completed_tasks = 3;
  int32 total_tasks = 4;
  double completion_rate = 5;
} 